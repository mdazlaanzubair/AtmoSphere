import Head from "next/head";
import Image from "next/image";
import { FaCloudsmith, FaSearch } from "react-icons/fa";
import { Inter } from "@next/font/google";
import axios from "axios";
import { useEffect, useState } from "react";
import Loader from "@/components/Loader";
import Weather from "@/components/Weather";

const inter = Inter({ subsets: ["latin"] });

export default function Home() {
  // creating state of app
  const [isLoading, setIsLoading] = useState(false); // loading state of app
  const [city, setCity] = useState("Karachi"); // state for holding city to be fetched
  const [weather, setWeather] = useState(); // state to hold weather data response from API

  const fetchWeatherData = async () => {
    const url = `${process.env.NEXT_PUBLIC_BASE_URL}?q=${city}&appid=${process.env.NEXT_PUBLIC_API_KEY}`;

    // fetching data using axios
    try {
      // changing isLoading state
      setIsLoading(true);

      // making request to API
      const response = await axios.get(url);

      // setting weather in state
      setWeather(response.data);

      // resetting city state
      setCity("");

      // returning in order to prevent script running further
      return;
    } catch (error) {
      // logging out errors if occurred
      console.log(error);

      // returning in order to prevent script running further
      return;
    } finally {
      // resetting isLoading state
      setIsLoading(false);

      // returning in order to prevent script running further
      return;
    }
  };

  useEffect(() => {
    fetchWeatherData();
  }, []);

  /* loading state content */
  if (isLoading && isLoading === true) {
    return (
      <div className="absolute top-0 bottom-0 left-0 right-0 z-50 flex items-center justify-center align-middle bg-black ">
        <Loader />
        <h1 className="font-normal text-1xl">
          Holdup a little, till we're fetching results.
        </h1>
      </div>
    );
  } else {
    return (
      <>
        <Head>
          <title>Atmo Sphere</title>
          <meta name="description" content="Generated by atmo-sphere" />
          <meta name="viewport" content="width=device-width, initial-scale=1" />
          <link rel="icon" href="/favicon.ico" />

          {/* google fonts */}
          <link rel="preconnect" href="https://fonts.googleapis.com" />
          <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
          <link
            href="https://fonts.googleapis.com/css2?family=Audiowide&family=Open+Sans:wght@300;400;700&display=swap"
            rel="stylesheet"
          />
        </Head>

        <h1>Weather {isLoading}</h1>

        {/* background overlay */}
        <div className="absolute top-0 left-0 right-0 bottom-0 bg-white/80 z-[1]"></div>
        {/* background image */}
        <Image
          className="object-cover"
          src="https://images.unsplash.com/photo-1484856299450-fb14549bca50?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=998&q=80"
          fill
          alt="Background Image"
        />

        {/* application logo & title */}
        <div className="z-20 relative max-w-[500px] w-full m-auto">
          <a href="#" title="ATMOSPHERE">
            <h1 className="flex items-start justify-center my-5 text-3xl align-center">
              <FaCloudsmith />
              <span className="flex ml-2 font-logo">ATMOSPHERE</span>
            </h1>
          </a>
        </div>

        {/* search weather form */}
        <div className="relative flex justify-center align-middle items-center max-w-[500px] w-full m-auto p-4 z-10 ">
          <form className="flex items-center justify-between w-full m-auto align-middle">
            <input
              className="flex-grow w-[100%] h-12 p-3 transition-all ease-in-out rounded-r-none focus:outline-none border-2 border-r-0 text-xl rounded-2xl placeholder:text-white/70 bg-black/40 text-white focus:bg-black/70"
              type="search"
              placeholder="Search city..."
              onChange={(e) => setCity(e.target.value)}
              autoFocus
            />
            <button
              className="h-12 p-4 text-white transition-all ease-in-out border-2 border-l-0 rounded-l-none bg-black/40 rounded-xl hover:bg-black/70 hover:text-white"
              onClick={fetchWeatherData}
              type="button"
            >
              <FaSearch />
            </button>
          </form>
        </div>

        {/* application content */}
        {weather ? <Weather weatherData={weather} /> : ""}
      </>
    );
  }
}

import Head from "next/head";
import Image from "next/image";
import { FaSearch } from "react-icons/fa";
import { Inter } from "@next/font/google";
import axios from "axios";
import { useEffect, useState } from "react";

const inter = Inter({ subsets: ["latin"] });

export default function Home() {
  // creating state of app
  const [isLoading, setIsLoading] = useState(false); // loading state of app
  const [city, setCity] = useState(""); // state for holding city to be fetched
  const [weather, setWeather] = useState({
    coord: {
      lon: 67.0822,
      lat: 24.9056,
    },
    weather: [
      {
        id: 721,
        main: "Haze",
        description: "haze",
        icon: "50n",
      },
    ],
    base: "stations",
    main: {
      temp: 292.05,
      feels_like: 291.01,
      temp_min: 292.05,
      temp_max: 292.05,
      pressure: 1017,
      humidity: 39,
    },
    visibility: 3000,
    wind: {
      speed: 1.03,
      deg: 340,
    },
    clouds: {
      all: 1,
    },
    dt: 1675355219,
    sys: {
      type: 1,
      id: 7576,
      country: "PK",
      sunrise: 1675304037,
      sunset: 1675343795,
    },
    timezone: 18000,
    id: 1174872,
    name: "Karachi",
    cod: 200,
  }); // state to hold weather data response from API

  const fetchWeatherData = async (e) => {
    const url = `${process.env.NEXT_PUBLIC_BASE_URL}?q=${city}&appid=${process.env.NEXT_PUBLIC_API_KEY}`;

    // fetching data using axios
    // const response = await axios.get(url);

    // setting weather in state
    // setWeather(response.data);

    // after fetching response resetting city state
    setCity("");
    console.log(url);
    console.log(city);

    return;
  };

  useEffect(() => {
    fetchWeatherData("Islamabad");
    // console.log(weather);
  }, [city]);

  return (
    <>
      <Head>
        <title>Atmo Sphere</title>
        <meta name="description" content="Generated by atmo-sphere" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <h1>Weather {isLoading}</h1>

      {/* background overlay */}
      <div className="absolute top-0 left-0 right-0 bottom-0 bg-black/40 z-[1]"></div>
      {/* background image */}
      <Image
        className="object-cover"
        src="https://images.unsplash.com/photo-1675309828980-20106b81253e?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=870&q=80"
        fill
      />

      {/* search weather form */}
      <div className="relative flex justify-center align-middle items-center max-w-[500px] w-full m-auto p-4 text-white z-10 ">
        <form className="flex justify-between items-center align-middle m-auto w-full px-3 bg-transparent border border-grey-300 text-white rounded-2xl">
          <div className=" flex-grow mx-2 ">
            <input
              className=" w-[100%] bg-transparent focus:outline-none text-2xl rounded-md"
              type="text"
              placeholder="Search city..."
              onChange={(e) => setCity(e.target.value)}
              autoFocus
            />
          </div>
          <button
            className=" hover:opacity-50 transition-all ease-in-out p-4 rounded-md "
            type="submit"
            onSubmit={(e) => fetchWeatherData()}
          >
            <FaSearch />
          </button>
        </form>
      </div>

      {/* weather result */}
      {city && city.length > 3 ? (
        <div className=" relative z-10 flex justify-center align-middle items-center">
          <h1 className=" text-5xl z-20 text-white">
            Today at{" "}
            <span className=" text-blue-600 underline underline-offset-8">
              {city}
            </span>
          </h1>
        </div>
      ) : (
        ""
      )}
    </>
  );
}
